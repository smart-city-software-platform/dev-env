#!/bin/bash
echo '#!/bin/bash'
echo 
localPATH=`pwd`
sep='---------------------------'
msg=""

CYAN='\033[0;36m'
NC='\033[0m'
RED='\033[0;31m'

verify () {
  if [ $? != 0 ]; then
    echo "${RED}$1${NC}"
    exit 2
  fi
}


if [ "$1" = "setup" ]; then
  echo $sep
  echo "Initializing submodules"
  echo $(git submodule init)

  echo $sep
  echo "Pulling submodules from remote"
  echo $(git submodule update --remote)
    
  echo $sep
  for d in */; do
    echo "Processing $d :"
    cd $localPATH/$d
    echo $sep
    echo "Cleaning detached HEAD"
    echo $(git -C $localPATH/$d checkout master)
    # echo "Building Docker images"
    # echo $(sh ./scripts/development setup)
  done
fi




if [ "$1" = "pull" ]; then
  echo $sep
  for d in */; do
    if [ -n "$(git -C $localPATH/$d status --porcelain)" ]; then 
      msg="You have uncomitted changes on $d"
      echo "${RED}"
      echo $msg
      echo "${NC}"
      echo
    fi
  done

  if [ -n "$msg" ]; then
    echo $sep
    echo "Aborting..."
    echo
    exit 1
  else
    echo "All repositories are clean"
    echo "$sep"
    for d in */; do
        echo "Processing $d :"
        git -C $localPATH/$d checkout master
        echo "${CYAN}"
        # echo $(git -C $localPATH/$d pull origin master)
        echo "${NC}"
    done
  fi
fi

if [ "$1" = "build" ]; then
  for d in */; do
    echo "$sep"
    echo "Building $d :"
    cd $localPATH/$d
    sh scripts/setup > /dev/null
    echo "${CYAN}"
    echo "OK"
    echo "${NC}"
  done
fi



if [ "$1" = "start" ]; then
  dirs=( resource-adaptor/ resource-cataloguer/ data-collector/ resource-viewer/ )
  for dir in "${dirs[@]}"; do
    echo "Starting ${dir}"
    cd $localPATH/${dir}
      echo "${CYAN}"
      echo $(./scripts/development stop)
      echo "${NC}"
      echo $(./scripts/development start)
  done
fi

if [ "$1" = "stop" ]; then
  for d in */; do
      echo "$sep"
      echo "Stopping $d :"
      cd $localPATH/$d
      echo "${CYAN}"
      echo $(./scripts/development stop)
      echo "${NC}"
  done
fi